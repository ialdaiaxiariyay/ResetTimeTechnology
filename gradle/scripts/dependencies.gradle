dependencies {
    minecraft "com.mojang:minecraft:$project.minecraft_version"
    forge "net.minecraftforge:forge:$project.minecraft_version-$project.forge_version"
    // layered mappings - Mojmap names, parchment and QM docs and parameters
    mappings loom.layered {
        it.mappings("org.quiltmc:quilt-mappings:$project.minecraft_version+build.$project.quilt_mappings:intermediary-v2")
        it.parchment("org.parchmentmc.data:parchment-$project.minecraft_version:$project.parchment_mappings@zip")
        it.officialMojangMappings { nameSyntheticMembers = false }
    }

    modCompileOnly("mezz.jei:jei-$project.minecraft_version-forge-api:$project.jei_version") { transitive = false }
    modCompileOnly("mezz.jei:jei-$project.minecraft_version-common-api:$project.jei_version") { transitive = false }

    modImplementation("com.gregtechceu.gtceu:gtceu-$project.minecraft_version:$project.gtceu_version") { transitive = false }
   // modImplementation("dev:gtceu:1.20.1:$project.gtceu_version") { transitive false }
    modImplementation("com.lowdragmc.ldlib:ldlib-forge-$project.minecraft_version:$project.ldlib_version") { transitive = false }
    modImplementation("com.tterrag.registrate:Registrate:$project.registrate_version")
    modImplementation("dev.latvian.mods:kubejs-forge:$project.kubejs_version")

    modImplementation("maven.modrinth:jade-1.20.1-forge-$project.jade_version")

    // Mixin Extras
    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:$project.mixinextras_version"))
    implementation(include("io.github.llamalad7:mixinextras-forge:$project.mixinextras_version"))

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    modImplementation 'appeng:appliedenergistics2-forge-15.2.1'
    modImplementation("dev.architectury:architectury-forge:${project.architectury_version}")

    modImplementation("dev.toma.configuration:configuration-forge-$project.minecraft_version:$project.configuration_version")

    forgeRuntimeLibrary("com.teamresourceful:yabn:1.0.3")
    forgeRuntimeLibrary("com.teamresourceful:bytecodecs:1.0.2")
    modImplementation("com.teamresourceful.resourcefullib:resourcefullib-forge-${project.minecraft_version}:${project.resourcefullib_version}")
    modImplementation("com.teamresourceful.resourcefulconfig:resourcefulconfig-forge-${project.minecraft_version}:${project.resourcefulconfig_version}")
    modImplementation("earth.terrarium.botarium:botarium-forge-${project.minecraft_version}:${project.botarium_version}")
    modImplementation("earth.terrarium.adastra:ad_astra-forge-${project.minecraft_version}:${ad_astra_version}") { transitive false }

    modImplementation("dev:gtmthings-1.3.4")

    modImplementation("dev:constructionwand-1.20.1-2.11")
    modImplementation("dev:worldedit-mod-7.2.15")

    modImplementation("dev:gtmthings-1.3.4")

    modImplementation("dev:gtlcore-1.1.1-build_8")
    modImplementation("dev:gtladditions-1.0.4_bulid_2")

    modImplementation("curse.maven:glodium-957920:5006780")
    modImplementation("dev:ExtendedAE-1.20-1.1.12-forge")

    modImplementation("org.moddingx:LibX:1.20.1-5.0.1")
    modImplementation("dev:TravelAnchors-1.20.1-5.0.1")

    modCompileOnly("dev:Re-Avaritia-forged-1.20.1-1.3.8.3")

    // ftb-chunk
    modImplementation("dev.ftb.mods:ftb-chunks-forge:2001.3.1"){ transitive = false }
    modRuntimeOnly("dev.ftb.mods:ftb-library-forge:2001.2.4"){ transitive = false }
    modRuntimeOnly("dev.ftb.mods:ftb-teams-forge:2001.3.0"){ transitive = false }

    // ftbu
    modImplementation("dev.ftb.mods:ftb-ultimine-forge:2001.1.5"){ transitive = false }


    modRuntimeOnly("mezz.jei:jei-$project.minecraft_version-forge:$project.jei_version") { transitive = false }

    modRuntimeOnly("maven.modrinth:embeddium:0.3.30+mc1.20.1")

    modRuntimeOnly("dev:rubidium-extra:0.5.4.3+mc1.20.1-build.121")

    modRuntimeOnly("dev:jecharacters:1.20.1-forge-4.5.11-dev-shadow")

    forgeRuntimeLibrary(runtimeOnly("icyllis.modernui:ModernUI-Core:3.10.1")) // Modern UI core framework
    forgeRuntimeLibrary(runtimeOnly("icyllis.modernui:ModernUI-Markdown:3.10.1")) { transitive = false }
    // Modern UI core extensions
    modRuntimeOnly("icyllis.modernui:ModernUI-Forge:1.20.1-3.10.1.4") { transitive = false } // ModernUI

}