package top.ialdaiaxiariyay.rtt.common.data.machines;

import com.gregtechceu.gtceu.GTCEu;
import com.gregtechceu.gtceu.api.data.RotationState;
import com.gregtechceu.gtceu.api.machine.MachineDefinition;
import com.gregtechceu.gtceu.api.machine.MultiblockMachineDefinition;
import com.gregtechceu.gtceu.api.machine.multiblock.PartAbility;
import com.gregtechceu.gtceu.api.machine.multiblock.WorkableElectricMultiblockMachine;
import com.gregtechceu.gtceu.api.pattern.FactoryBlockPattern;
import com.gregtechceu.gtceu.api.pattern.Predicates;
import com.gregtechceu.gtceu.api.recipe.GTRecipe;
import com.gregtechceu.gtceu.api.recipe.OverclockingLogic;
import com.gregtechceu.gtceu.client.util.TooltipHelper;
import com.gregtechceu.gtceu.common.data.GTBlocks;
import com.gregtechceu.gtceu.common.data.GTRecipeModifiers;

import net.minecraft.network.chat.Component;
import net.minecraft.world.item.ItemStack;

import org.gtlcore.gtlcore.GTLCore;
import org.gtlcore.gtlcore.common.data.GTLBlocks;
import org.gtlcore.gtlcore.common.data.GTLRecipeTypes;
import org.gtlcore.gtlcore.utils.Registries;
import top.ialdaiaxiariyay.rtt.api.registries.RTTRegistration;
import top.ialdaiaxiariyay.rtt.common.data.RTTCreativeModeTabs;
import top.ialdaiaxiariyay.rtt.common.data.RTTRecipeTypes;
import top.ialdaiaxiariyay.rtt.common.machines.EXHarmonyMachine;
import top.ialdaiaxiariyay.rtt.common.machines.pattern.MultiverseInformationCollectorPattern;
import top.ialdaiaxiariyay.rtt.common.machines.rendered.EXEyeOfHarmonyRenderer;
import top.ialdaiaxiariyay.rtt.common.machines.rendered.MultiverseInformationCollector;

import java.util.List;
import java.util.function.BiConsumer;

import static com.gregtechceu.gtceu.api.pattern.util.RelativeDirection.*;
import static top.ialdaiaxiariyay.rtt.api.registries.RTTRegistration.REGISTRATE;

@SuppressWarnings("unused")
public class RTTMachines {

    public static final BiConsumer<ItemStack, List<Component>> RTT_ADD = (stack, components) -> components
            .add(Component.translatable("rtt.registry.add")
                    .withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())));
    static {
        RTTRegistration.REGISTRATE.creativeModeTab(() -> RTTCreativeModeTabs.MACHINES_ITEM);
    }

    public static void init() {
        RTTSamllMachines.init();
    }

    public static final MachineDefinition FIGURE_FACTORY = REGISTRATE.multiblock("figure_factory", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .appearanceBlock(GTLBlocks.DIMENSIONALLY_TRANSCENDENT_CASING)
            .recipeType(RTTRecipeTypes.FIGURE_FACTORY)
            .recipeModifiers(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .recipeModifier((machine, recipe, params, result) -> {
                GTRecipe recipe1 = recipe.copy();
                recipe1 = GTRecipeModifiers.fastParallel(machine, recipe1, 64, false).getFirst();
                return recipe1;
            })
            .tooltips(Component.translatable("block.rtt.figure_factory.tooltip.1"))
            .tooltips(Component.translatable("block.rtt.figure_factory.tooltip.2"))
            .tooltips(Component.translatable("block.rtt.figure_factory.tooltip.3"))
            .tooltips(Component.translatable("block.rtt.figure_factory.tooltip.4"))
            .tooltips(Component.translatable("block.rtt.figure_factory.tooltip.5"))
            .tooltipBuilder(RTT_ADD)
            .pattern(definition -> FactoryBlockPattern.start(FRONT, UP, LEFT)
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AAAAAAAAAAAAAAAAAAAAA", "                     ", "                     ", "                     ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "ACCCCCCCCCCCCCCCCCCCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACCCCCCCCCCCCCCCCCCCA", "ADDDDDDDDDDDDDDDDDDDA", "                     ", "                     ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B D   D   D   D   D B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDDDDDDDDDDDDDDDDDDA", "                     ", "                     ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B D   D   D   D   D B", "B D   D   D   D   D B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDDDDDDDDDDDDDDDDDDA", "ADDDDDDDDDDDDDDDDDDDA", "                     ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B                   B", "B D   D   D   D   D B", "B D   D   D   D   D B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDDDDDDDDDDDDDDDDDDA", "                     ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B                   B", "B                   B", "B D   D   D   D   D B", "B D   D   D   D   D B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDDDDDDDDDDDDDDDDDDA", "ADDDDDDDDDDDDDDDDDDDA", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B G   G   G   G   G B", "B G   G   G   G   G B", "B G   G   G   G   G B", "B D F D F D F D F D B", "B D   D   D   D   D B", "B                   B", "B                   B", "B                   B", "B H   H   H   H   H B", "B H   H   H   H   H B", "B H   H   H   H   H B", "ADDDDDDDDDDDDDDDDDDDA", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B                   B", "B                   B", "B                   B", "B                   B", "B I   I   I   I   I B", "B                   B", "B                   B", "B H   H   H   H   H B", "B H   H   H   H   H B", "B                   B", "B                   B", "ADDDDDDDDDDDDDDDDDDDA", "ADDDJDDDJDDDJDDDJDDDA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B  KKFFKKFFKKFFKKFFKK", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B H   H   H   H   H B", "B H   H   H   H   H B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDJDJDJDJDJDJDJDJDDA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "LKKIIKKIIKKIIKKIIKKFB", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B H   H   H   H   H B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDDJDDDJDDDJDDDJDDDA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "LKKKKKKKKKKKKKKKKKKKB", "B K   K   K   K   K B", "B K   K   K   K   K B", "B K   K   K   K   K B", "B M   M   M   M   M B", "B                   B", "B J F J F J F J F J B", "B                   B", "B F   F   F   F   F B", "B F   F   F   F   F B", "B F   F   F   F   F B", "B F   F   F   F   F B", "AJJJJJJJJJJJJJJJJJJJ~")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "LKKIIKKIIKKIIKKIIKKFB", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B H   H   H   H   H B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDDJDDDJDDDJDDDJDDDA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B  KKFFKKFFKKFFKKFFKK", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B H   H   H   H   H B", "B H   H   H   H   H B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDJDJDJDJDJDJDJDJDDA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B                   B", "B                   B", "B                   B", "B                   B", "B I   I   I   I   I B", "B                   B", "B                   B", "B H   H   H   H   H B", "B H   H   H   H   H B", "B                   B", "B                   B", "ADDDDDDDDDDDDDDDDDDDA", "ADDDJDDDJDDDJDDDJDDDA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B G   G   G   G   G B", "B G   G   G   G   G B", "B G   G   G   G   G B", "B E   E   E   E   E B", "B E   E   E   E   E B", "B                   B", "B                   B", "B                   B", "B H   H   H   H   H B", "B H   H   H   H   H B", "B H   H   H   H   H B", "ADDDDDDDDDDDDDDDDDDDA", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B                   B", "B                   B", "B E   E   E   E   E B", "B E F E F E F E F E B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDDDDDDDDDDDDDDDDDDA", "ADDDDDDDDDDDDDDDDDDDA", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B                   B", "B E   E   E   E   E B", "B E   E   E   E   E B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDDDDDDDDDDDDDDDDDDA", "                     ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B E   E   E   E   E B", "B E   E   E   E   E B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDDDDDDDDDDDDDDDDDDA", "ADDDDDDDDDDDDDDDDDDDA", "                     ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "B E   E   E   E   E B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "B                   B", "ADDDDDDDDDDDDDDDDDDDA", "                     ", "                     ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "ACCCCCCCCCCCCCCCCCCCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACBBBBBBBBBBBBBBBBBCA", "ACCCCCCCCCCCCCCCCCCCA", "ADDDDDDDDDDDDDDDDDDDA", "                     ", "                     ", "                     ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AABBBBBBBBBBBBBBBBBAA", "AAAAAAAAAAAAAAAAAAAAA", "                     ", "                     ", "                     ", "                     ")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("G", Predicates.blocks(Registries.getBlock("gtceu:magnetohydrodynamicallyconstrainedstarmatter_frame")))
                    .where("J", Predicates.blocks(Registries.getBlock("gtlcore:component_assembly_line_casing_max")))
                    .where("L", Predicates.blocks(Registries.getBlock("gtlcore:dimensionally_transcendent_casing"))
                            .or(Predicates.abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setPreviewCount(1)))
                    .where("M", Predicates.blocks(Registries.getBlock("kubejs:create_aggregatione_core")))
                    .where("E", Predicates.blocks(Registries.getBlock("gtlcore:molecular_casing")))
                    .where("H", Predicates.blocks(Registries.getBlock("kubejs:neutronium_pipe_casing")))
                    .where("F", Predicates.blocks(Registries.getBlock("kubejs:dimension_creation_casing")))
                    .where("K", Predicates.blocks(Registries.getBlock("gtlcore:create_casing")))
                    .where("B", Predicates.blocks(Registries.getBlock("gtlcore:infinity_glass")))
                    .where("C", Predicates.blocks(Registries.getBlock("gtlcore:manipulator")))
                    .where("A", Predicates.blocks(Registries.getBlock("gtlcore:dimensionally_transcendent_casing")))
                    .where("D", Predicates.blocks(Registries.getBlock("gtlcore:dimension_connection_casing")))
                    .where("I", Predicates.blocks(Registries.getBlock("kubejs:create_hpca_component")))
                    .where(' ', Predicates.any())
                    .build())
            .workableCasingRenderer(GTLCore.id("block/casings/dimensionally_transcendent_casing"),
                    GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public static final MachineDefinition MULTIVERSE_INFORMATION_COLLECTOR = REGISTRATE.multiblock("multiverse_information_collector", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .appearanceBlock(GTLBlocks.DIMENSIONALLY_TRANSCENDENT_CASING)
            .recipeType(RTTRecipeTypes.MULTIVERSE_INFORMATION_COLLECTOR)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("block.rtt.multiverse_information_collector.tooltip.1"))
            .tooltips(Component.translatable("block.rtt.multiverse_information_collector.tooltip.2"))
            .tooltips(Component.translatable("block.rtt.multiverse_information_collector.tooltip.3"))
            .tooltips(Component.translatable("block.rtt.multiverse_information_collector.tooltip.4"))
            .tooltips(Component.translatable("block.rtt.multiverse_information_collector.tooltip.5"))
            .tooltipBuilder(RTT_ADD)
            .pattern(definition -> MultiverseInformationCollectorPattern.blockPattern
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("C", Predicates.blocks(Registries.getBlock("kubejs:spacetime_assembly_line_casing")))
                    .where("A", Predicates.blocks(Registries.getBlock("gtlcore:dimensionally_transcendent_casing")))
                    .where("L", Predicates.blocks(Registries.getBlock("gtceu:high_power_casing")))
                    .where("I", Predicates.blocks(Registries.getBlock("gtlcore:infinity_glass")))
                    .where("H", Predicates.blocks(Registries.getBlock("kubejs:containment_field_generator")))
                    .where("B", Predicates.blocks(Registries.getBlock("gtlcore:dimension_connection_casing")))
                    .where("K", Predicates.blocks(Registries.getBlock("gtlcore:dimension_connection_casing")))
                    .where("E", Predicates.blocks(Registries.getBlock("gtlcore:component_assembly_line_casing_max")))
                    .where("M", Predicates.blocks(Registries.getBlock("gtlcore:dimensionally_transcendent_casing"))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(5))
                            .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where("F", Predicates.blocks(Registries.getBlock("gtlcore:ultimate_stellar_containment_casing")))
                    .where("D", Predicates.blocks(Registries.getBlock("gtlcore:dimensionally_transcendent_casing")))
                    .where("G", Predicates.blocks(Registries.getBlock("gtlcore:molecular_casing")))
                    .where("J", Predicates.blocks(Registries.getBlock("gtlcore:power_module_5")))
                    .where(" ", Predicates.any())
                    .build())
            .renderer(MultiverseInformationCollector::new)
            .hasTESR(true)
            .register();

    public final static MultiblockMachineDefinition EX_EYE_OF_HARMONY = REGISTRATE.multiblock("extremely_eye_of_harmony", EXHarmonyMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.COSMOS_SIMULATION_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.2"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.3"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.4"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.5"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.6"))
            .tooltips(Component.translatable("rtt.machine.eye_of_harmony.tooltip.0"))
            .tooltips(Component.translatable("rtt.machine.eye_of_harmony.tooltip.1"))
            .tooltips(Component.translatable("rtt.machine.eye_of_harmony.tooltip.2"))
            .tooltips(Component.translatable("rtt.machine.eye_of_harmony.tooltip.3"))
            .tooltips(Component.translatable("rtt.machine.eye_of_harmony.tooltip.4"))
            .tooltips(Component.translatable("rtt.machine.eye_of_harmony.tooltip.5"))
            .tooltips(Component.translatable("rtt.machine.eye_of_harmony.tooltip.6"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.cosmos_simulation")))
            .tooltipBuilder(RTT_ADD)
            .recipeModifier(EXHarmonyMachine::recipeModifier)
            .appearanceBlock(GTBlocks.HIGH_POWER_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "               A A               ", "               A A               ", "              DDDDD              ", "             DDADADD             ", "         AAAADAADAADAAAA         ", "             DDDDDDD             ", "         AAAADAADAADAAAA         ", "             DDADADD             ", "              DDDDD              ", "               A A               ", "               A A               ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "               A A               ", "                D                ", "                D                ", "             DDDDDDD             ", "            DD     DD            ", "            D  EEE  D            ", "       AAA  D EFFFE D  AAA       ", "          DDD EFFFE DDD          ", "       AAA  D EFFFE D  AAA       ", "            D  EEE  D            ", "            DD     DD            ", "             DDDDDDD             ", "                D                ", "                D                ", "               A A               ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "              AAAAA              ", "                D                ", "                F                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "      A                   A      ", "     AA                   AA     ", "      ADFF             FFDA      ", "     AA                   AA     ", "      A                   A      ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                F                ", "                D                ", "              AAAAA              ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "                D                ", "             GEEFEEG             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "       G                 G       ", "       E                 E       ", "    AA E                 E AA    ", "      DF                 FD      ", "    AA E                 E AA    ", "       E                 E       ", "       G                 G       ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             GEEFEEG             ", "                D                ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "               A A               ", "              AAAAA              ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "    A                       A    ", "   AA                       AA   ", "    ADF                   FDA    ", "   AA                       AA   ", "    A                       A    ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "              AAAAA              ", "               A A               ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "               A A               ", "               A A               ", "                D                ", "             GEEFEEG             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "     G                     G     ", "     E                     E     ", "  AA E                     E AA  ", "    DF                     FD    ", "  AA E                     E AA  ", "     E                     E     ", "     G                     G     ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             GEEFEEG             ", "                D                ", "               A A               ", "               A A               ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "               A A               ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "  A                           A  ", "   DF                       FD   ", "  A                           A  ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "               A A               ", "                                 ", "                                 ")
                    .aisle("                                 ", "               A A               ", "               A A               ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", " AA                           AA ", "   DF                       FD   ", " AA                           AA ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "               A A               ", "               A A               ", "                                 ")
                    .aisle("                                 ", "               A A               ", "                D                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", " A                             A ", "  D                           D  ", " A                             A ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                D                ", "               A A               ", "                                 ")
                    .aisle("                                 ", "               A A               ", "                D                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", " A                             A ", "  D                           D  ", " A                             A ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                D                ", "               A A               ", "                                 ")
                    .aisle("               A A               ", "               A A               ", "             DDDDDDD             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", "  D                           D  ", "AAD                           DAA", "  D                           D  ", "AAD                           DAA", "  D                           D  ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             DDDDDDD             ", "               A A               ", "               A A               ")
                    .aisle("               A A               ", "              DDDDD              ", "            DD     DD            ", "                                 ", "                                 ", "       G                 G       ", "                                 ", "     G                     G     ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", "  D                           D  ", " D                             D ", "AD                             DA", " D                             D ", "AD                             DA", " D                             D ", "  D                           D  ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "     G                     G     ", "                                 ", "       G                 G       ", "                                 ", "                                 ", "            DD     DD            ", "              DDDDD              ", "               A A               ")
                    .aisle("               A A               ", "             DDADADD             ", "            D  EEE  D            ", "                                 ", "      A                   A      ", "       E                 E       ", "    A                       A    ", "     E                     E     ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", " D                             D ", " D                             D ", "AAE                           EAA", " DE                           ED ", "AAE                           EAA", " D                             D ", " D                             D ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "     E                     E     ", "    A                       A    ", "       E                 E       ", "      A                   A      ", "                                 ", "            D  EEE  D            ", "             DDADADD             ", "               A A               ")
                    .aisle("            AAAAAAAAA            ", "         AAAADAADAADAAAA         ", "       AAA  D EFFFE D  AAA       ", "      AA                 AA      ", "     AA                   AA     ", "    AA E                 E AA    ", "   AA                       AA   ", "  AA E                     E AA  ", "  A                           A  ", " AA                           AA ", " A                             A ", " A                             A ", "AAD                           DAA", "AD                             DA", "AAE                           EAA", "AAF                           FAA", "ADF                           FDA", "AAF                           FAA", "AAE                           EAA", "AD                             DA", "AAD                           DAA", " A                             A ", " A                             A ", " AA                           AA ", "  A                           A  ", "  AA E                     E AA  ", "   AA                       AA   ", "    AA E                 E AA    ", "     AA                   AA     ", "      AA                 AA      ", "       AAA  D EFFFE D  AAA       ", "         AAAADAADAADAAAA         ", "            AAAAAAAAA            ")
                    .aisle("               A A               ", "             DDDDDDD             ", "          DDD EFFFE DDD          ", "        DD             DD        ", "      ADFF             FFDA      ", "      DF                 FD      ", "    ADF                   FDA    ", "    DF                     FD    ", "   DF                       FD   ", "   DF                       FD   ", "  D                           D  ", "  D                           D  ", "  D                           D  ", " D                             D ", " DE                           ED ", "ADF                           FDA", " DF                           FD ", "ADF                           FDA", " DE                           ED ", " D                             D ", "  D                           D  ", "  D                           D  ", "  D                           D  ", "   DF                       FD   ", "   DF                       FD   ", "    DF                     FD    ", "    ADF                   FDA    ", "      DF                 FD      ", "      ADFF             FFDA      ", "        DD             DD        ", "          DDD EFFFE DDD          ", "             DDDDDDD             ", "               A A               ")
                    .aisle("            AAAAAAAAA            ", "         AAAADAADAADAAAA         ", "       AAA  D EFFFE D  AAA       ", "      AA                 AA      ", "     AA                   AA     ", "    AA E                 E AA    ", "   AA                       AA   ", "  AA E                     E AA  ", "  A                           A  ", " AA                           AA ", " A                             A ", " A                             A ", "AAD                           DAA", "AD                             DA", "AAE                           EAA", "AAF                           FAA", "ADF                           FDA", "AAF                           FAA", "AAE                           EAA", "AD                             DA", "AAD                           DAA", " A                             A ", " A                             A ", " AA                           AA ", "  A                           A  ", "  AA E                     E AA  ", "   AA                       AA   ", "    AA E                 E AA    ", "     AA                   AA     ", "      AA                 AA      ", "       AAA  D EFFFE D  AAA       ", "         AAAADAADAADAAAA         ", "            AAAAAAAAA            ")
                    .aisle("               A A               ", "             DDADADD             ", "            D  EEE  D            ", "                                 ", "      A                   A      ", "       E                 E       ", "    A                       A    ", "     E                     E     ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", " D                             D ", " D                             D ", "AAE                           EAA", " DE                           ED ", "AAE                           EAA", " D                             D ", " D                             D ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "     E                     E     ", "    A                       A    ", "       E                 E       ", "      A                   A      ", "                                 ", "            D  EEE  D            ", "             DDADADD             ", "               A A               ")
                    .aisle("               A A               ", "              DDDDD              ", "            DD     DD            ", "                                 ", "                                 ", "       G                 G       ", "                                 ", "     G                     G     ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", "  D                           D  ", " D                             D ", "AD                             DA", " D                             D ", "AD                             DA", " D                             D ", "  D                           D  ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "     G                     G     ", "                                 ", "       G                 G       ", "                                 ", "                                 ", "            DD     DD            ", "              DDDDD              ", "               A A               ")
                    .aisle("               A A               ", "               A A               ", "             DDDDDDD             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", "  D                           D  ", "AAD                           DAA", "  D                           D  ", "AAD                           DAA", "  D                           D  ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             DDDDDDD             ", "               A A               ", "               A A               ")
                    .aisle
                    .aisle
                    .aisle("                                 ", "               A A               ", "               A A               ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", " AA                           AA ", "   DF                       FD   ", " AA                           AA ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "               A A               ", "               A A               ", "                                 ")
                    .aisle("                                 ", "                                 ", "               A A               ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "  A                           A  ", "   DF                       FD   ", "  A                           A  ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "               A A               ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "               A A               ", "               A A               ", "                D                ", "             GEEFEEG             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "     G                     G     ", "     E                     E     ", "  AA E                     E AA  ", "    DF                     FD    ", "  AA E                     E AA  ", "     E                     E     ", "     G                     G     ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             GEEFEEG             ", "                D                ", "               A A               ", "               A A               ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "               A A               ", "              AAAAA              ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "    A                       A    ", "   AA                       AA   ", "    ADF                   FDA    ", "   AA                       AA   ", "    A                       A    ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "              AAAAA              ", "               A A               ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "                D                ", "             GEEFEEG             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "       G                 G       ", "       E                 E       ", "    AA E                 E AA    ", "      DF                 FD      ", "    AA E                 E AA    ", "       E                 E       ", "       G                 G       ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             GEEFEEG             ", "                D                ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "              AAAAA              ", "                D                ", "                F                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "      A                   A      ", "     AA                   AA     ", "      ADFF             FFDA      ", "     AA                   AA     ", "      A                   A      ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                F                ", "                D                ", "              AAAAA              ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "               A A               ", "                D                ", "                D                ", "             DDDDDDD             ", "            DD     DD            ", "            D  EEE  D            ", "       AAA  D EFFFE D  AAA       ", "          DDD EFFFE DDD          ", "       AAA  D EFFFE D  AAA       ", "            D  EEE  D            ", "            DD     DD            ", "             DDDDDDD             ", "                D                ", "                D                ", "               A A               ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "               A A               ", "               A A               ", "              DDDDD              ", "             DDADADD             ", "         AAAADAADAADAAAA         ", "             DDDDDDD             ", "         AAAADAADAADAAAA         ", "             DDADADD             ", "              DDDDD              ", "               A A               ", "               A A               ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             AAAAAAA             ", "            AABBBBBAA            ", "            ABBBBBBBA            ", "            ABBAAABBA            ", "            ABBA~ABBA            ", "            ABBAAABBA            ", "            ABBBBBBBA            ", "            AABBBBBAA            ", "             AAAAAAA             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .where('~', Predicates.controller(Predicates.blocks(definition.get())))
                    .where('A', Predicates.blocks(GTLBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                    .where('B', Predicates.blocks(GTBlocks.HIGH_POWER_CASING.get())
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setPreviewCount(1)))
                    .where('D', Predicates.blocks(GTLBlocks.DIMENSION_INJECTION_CASING.get()))
                    .where('E', Predicates.blocks(Registries.getBlock("kubejs:dimensional_bridge_casing")))
                    .where('F', Predicates.blocks(Registries.getBlock("kubejs:spacetime_compression_field_generator")))
                    .where('G', Predicates.blocks(Registries.getBlock("kubejs:dimensional_stability_casing")))
                    .where(" ", Predicates.any())
                    .build())
            .renderer(EXEyeOfHarmonyRenderer::new)
            .hasTESR(true)
            .register();
}
